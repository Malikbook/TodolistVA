{"ast":null,"code":"import { decorate, computed, observable, action } from 'mobx';\n\nclass Store {\n  constructor() {\n    this.tasks = [{\n      id: 0,\n      title: 'Create todo-react app',\n      done: false\n    }, {\n      id: 1,\n      title: 'Make a video about it',\n      done: true\n    }, {\n      id: 2,\n      title: 'Create simple todo-app',\n      done: false\n    }];\n    this.descriptions = [{\n      id: 0,\n      title: 'Create todo-react app, Make a video about it',\n      done: false\n    }, {\n      id: 1,\n      title: 'Make a video about it, Create todo-react app',\n      done: true\n    }, {\n      id: 2,\n      title: 'Create simple todo-app, Make a video about it',\n      done: false\n    }];\n  }\n\n  get sortedTasks() {\n    const tasks = this.tasks;\n    const descriptions = this.descriptions;\n    return tasks, descriptions.slice().sort((a, b) => a.done === b.done ? 0 : a.done ? 1 : -1);\n  }\n\n  get activeTasksCount() {\n    return this.tasks.filter(item => !item.done).length, this.descriptions.filter(item => !item.done).length;\n  }\n\n  setTasks(payload) {\n    this.tasks = payload;\n    this.descriptions = payload;\n  }\n\n  addTask(task) {\n    let tasks = this.tasks;\n    tasks.push({\n      id: this.tasks.length || 0,\n      title: task,\n      done: false\n    });\n    this.setTasks(tasks);\n  }\n\n  addDesctiption(description) {\n    let descriptions = this.descriptions;\n    descriptions.push({\n      id: this.descriptions.length || 0,\n      title: description,\n      done: false\n    });\n  }\n\n  doneTask(id) {\n    let tasks = this.tasks;\n    const index = tasks.map(task => task.id).indexOf(id);\n    tasks[index].done = true;\n    this.setTasks(tasks);\n  }\n\n  doneDescription(id) {\n    let descriptions = this.descriptions;\n    const index = descriptions.map(description => description.id).indexOf(id);\n    descriptions[index].done = true;\n    this.setDescription(descriptions);\n  }\n\n  deleteTask(id) {\n    this.setTasks(this.tasks.filter(item => item.id !== id));\n  }\n\n}\n\n;\ndeleteDescription(id);\nStore = decorate(Store, {\n  tasks: observable,\n  setTasks: action,\n  addTask: action,\n  deleteTask: action,\n  sortedTasks: computed,\n  activeTasksCount: computed\n});\nexport default new Store();","map":{"version":3,"sources":["/Users/user/Documents/GitHub/TodolistVA/TodolistVA/src/store.js"],"names":["decorate","computed","observable","action","Store","tasks","id","title","done","descriptions","sortedTasks","slice","sort","a","b","activeTasksCount","filter","item","length","setTasks","payload","addTask","task","push","addDesctiption","description","doneTask","index","map","indexOf","doneDescription","setDescription","deleteTask","deleteDescription"],"mappings":"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","sourcesContent":["import { decorate, computed, observable, action } from 'mobx';\r\n\r\nclass Store {\r\n  tasks = [\r\n    { id: 0, title: 'Create todo-react app', done: false },\r\n    { id: 1, title: 'Make a video about it', done: true },\r\n    { id: 2, title: 'Create simple todo-app', done: false }\r\n  ];\r\n\r\n  descriptions = [\r\n    { id: 0, title: 'Create todo-react app, Make a video about it', done: false },\r\n    { id: 1, title: 'Make a video about it, Create todo-react app', done: true },\r\n    { id: 2, title: 'Create simple todo-app, Make a video about it', done: false }\r\n  ];\r\n\r\n  get sortedTasks() {\r\n    const tasks = this.tasks;\r\n    const descriptions = this.descriptions;\r\n    return tasks, descriptions\r\n      .slice()\r\n      .sort((a, b) => (a.done === b.done ? 0 : a.done ? 1 : -1));\r\n  }\r\n\r\n  get activeTasksCount() {\r\n    return this.tasks.filter(item => !item.done).length,\r\n           this.descriptions.filter(item => !item.done).length;\r\n  }\r\n\r\n  setTasks(payload) {\r\n    this.tasks = payload;\r\n    this.descriptions = payload;\r\n  }\r\n\r\n  addTask(task) {\r\n    let tasks = this.tasks;\r\n    \r\n    tasks.push({\r\n      id: this.tasks.length || 0,\r\n      title: task,\r\n      done: false\r\n    });\r\n\r\n    this.setTasks(tasks);\r\n  };\r\n\r\n  addDesctiption(description){\r\n    let descriptions = this.descriptions;\r\n\r\n    descriptions.push({\r\n      id: this.descriptions.length || 0,\r\n      title: description,\r\n      done: false\r\n    });\r\n\r\n  }\r\n\r\n  doneTask(id) {\r\n    let tasks = this.tasks;\r\n    const index = tasks.map(task => task.id).indexOf(id);\r\n    tasks[index].done = true;\r\n    this.setTasks(tasks);\r\n  };\r\n\r\n  doneDescription(id) {\r\n    let descriptions = this.descriptions;\r\n    const index = descriptions.map(description => description.id).indexOf(id);\r\n    descriptions[index].done = true;\r\n    this.setDescription(descriptions);\r\n  };\r\n\r\n  deleteTask(id) {\r\n    this.setTasks(this.tasks.filter(item => item.id !== id));\r\n  }\r\n};\r\n\r\n  deleteDescription(id)\r\n\r\nStore = decorate(Store, {\r\n  tasks: observable,\r\n  setTasks: action,\r\n  addTask: action,\r\n  deleteTask: action,\r\n  sortedTasks: computed,\r\n  activeTasksCount: computed\r\n});\r\n\r\nexport default new Store();\r\n"]},"metadata":{},"sourceType":"module"}