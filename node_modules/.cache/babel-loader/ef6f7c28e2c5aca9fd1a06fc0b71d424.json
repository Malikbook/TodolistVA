{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/TodolistVA/TodolistVA/src/App.js\";\nimport React from 'react';\nimport Task from './components/Task';\nimport TaskInput from './components/TaskInput';\nimport store from './store';\nimport { observer } from 'mobx-react';\n\nclass App extends React.Component {\n  render() {\n    const {\n      sortedTasks\n    } = store;\n    const {\n      sortedDescriptions\n    } = store;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, \"Active tasks: \", store.activeTasksCount), (sortedDescriptions, sortedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n      doneTask: () => store.doneTask(task.id),\n      doneDescription: () => store.doneDescription(description.id),\n      deleteTask: () => store.deleteTask(task.id),\n      deleteDescription: () => store.deleteDescription(description.id),\n      task: task,\n      description: description,\n      key: task.id,\n      key: descriptions.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }))), /*#__PURE__*/React.createElement(TaskInput, {\n      addTask: v => store.addTask(v),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default observer(App);","map":{"version":3,"sources":["/Users/user/Documents/GitHub/TodolistVA/TodolistVA/src/App.js"],"names":["React","Task","TaskInput","store","observer","App","Component","render","sortedTasks","sortedDescriptions","activeTasksCount","map","task","doneTask","id","doneDescription","description","deleteTask","deleteDescription","descriptions","v","addTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkBL,KAAxB;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAyBN,KAA/B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmCA,KAAK,CAACO,gBAAzC,CADF,GAEGD,kBAAkB,EAACD,WAAW,CAACG,GAAZ,CAAgBC,IAAI,iBACtC,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,MAAMT,KAAK,CAACU,QAAN,CAAeD,IAAI,CAACE,EAApB,CADlB;AAEE,MAAA,eAAe,EAAE,MAAMX,KAAK,CAACY,eAAN,CAAsBC,WAAW,CAACF,EAAlC,CAFzB;AAGE,MAAA,UAAU,EAAE,MAAMX,KAAK,CAACc,UAAN,CAAiBL,IAAI,CAACE,EAAtB,CAHpB;AAIE,MAAA,iBAAiB,EAAE,MAAMX,KAAK,CAACe,iBAAN,CAAwBF,WAAW,CAACF,EAApC,CAJ3B;AAKE,MAAA,IAAI,EAAEF,IALR;AAME,MAAA,WAAW,EAAEI,WANf;AAOE,MAAA,GAAG,EAAEJ,IAAI,CAACE,EAPZ;AAQE,MAAA,GAAG,EAAEK,YAAY,CAACL,EARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB,CAFtB,gBAcE,oBAAC,SAAD;AAAW,MAAA,OAAO,EAAEM,CAAC,IAAIjB,KAAK,CAACkB,OAAN,CAAcD,CAAd,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AAkBD;;AAtB+B;;AAyBlC,eAAehB,QAAQ,CAACC,GAAD,CAAvB","sourcesContent":["import React from 'react';\nimport Task from './components/Task';\nimport TaskInput from './components/TaskInput';\nimport store from './store';\nimport { observer } from 'mobx-react';\n\nclass App extends React.Component {\n  render() {\n    const { sortedTasks } = store;\n    const { sortedDescriptions } = store;\n    return (\n      <div className=\"App\">\n        <h1 className=\"top\">Active tasks: {store.activeTasksCount}</h1>\n        {sortedDescriptions,sortedTasks.map(task => (\n          <Task\n            doneTask={() => store.doneTask(task.id)}\n            doneDescription={() => store.doneDescription(description.id)}\n            deleteTask={() => store.deleteTask(task.id)}\n            deleteDescription={() => store.deleteDescription(description.id)}\n            task={task}\n            description={description}\n            key={task.id}\n            key={descriptions.id}\n          ></Task>\n        ))}\n        <TaskInput addTask={v => store.addTask(v)}></TaskInput>\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n"]},"metadata":{},"sourceType":"module"}