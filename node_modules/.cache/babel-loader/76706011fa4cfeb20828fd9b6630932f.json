{"ast":null,"code":"import { decorate, computed, observable, action } from 'mobx';\n\nclass Store {\n  constructor() {\n    this.tasks = [{\n      id: 0,\n      title: 'Create todo-react app',\n      done: false\n    }, {\n      id: 1,\n      title: 'Make a video about it',\n      done: true\n    }, {\n      id: 2,\n      title: 'Create simple todo-app',\n      done: false\n    }];\n  }\n\n  get sortedTasks() {\n    const tasks = this.tasks;\n    return tasks.slice().sort((a, b) => a.done === b.done ? 0 : a.done ? 1 : -1);\n  }\n\n  get activeTasksCount() {\n    return this.tasks.filter(item => !item.done).length;\n  }\n\n  get activeDescriptionsCount() {\n    return this.descriptions.filter(item => !item.done).length;\n  }\n\n  setTasks(payload) {\n    this.tasks = payload;\n  }\n\n  setDescriptions(payload) {\n    this.descriptions = payload;\n  }\n\n  addTask(task) {\n    let tasks = this.tasks;\n    tasks.push({\n      id: this.tasks.length || 0,\n      title: task,\n      done: false\n    });\n    this.setTasks(tasks);\n  }\n\n  addDesctiption(description) {\n    let descriptions = this.descriptions;\n    descriptions.push({\n      id: this.descriptions.length || 0,\n      title: description,\n      done: false\n    });\n    this.setDescriptions(descriptions);\n  }\n\n  doneTask(id) {\n    let tasks = this.tasks;\n    const index = tasks.map(task => task.id).indexOf(id);\n    tasks[index].done = true;\n    this.setTasks(tasks);\n  }\n\n  doneDescription(id) {\n    let descriptions = this.descriptions;\n    const index = descriptions.map(description => description.id).indexOf(id);\n    descriptions[index].done = true;\n    this.setDescriptions(descriptions);\n  }\n\n  deleteTask(id) {\n    this.setTasks(this.tasks.filter(item => item.id !== id));\n  }\n\n  deleteDescription(id) {\n    this.setDescriptions(this.descriptions.filter(item => item.id !== id));\n  }\n\n}\n\nStore = decorate(Store, {\n  tasks: observable,\n  setTasks: action,\n  addTask: action,\n  deleteTask: action,\n  sortedTasks: computed,\n  activeTasksCount: computed,\n  descriptions: observable,\n  setDescriptions: action,\n  addDesctiption: action,\n  deleteDescription: action,\n  sortedDescriptions: computed,\n  activeDescriptionsCount: computed\n});\nexport default new Store();","map":{"version":3,"sources":["/Users/user/Documents/GitHub/TodolistVA/TodolistVA/src/store.js"],"names":["decorate","computed","observable","action","Store","tasks","id","title","done","sortedTasks","slice","sort","a","b","activeTasksCount","filter","item","length","activeDescriptionsCount","descriptions","setTasks","payload","setDescriptions","addTask","task","push","addDesctiption","description","doneTask","index","map","indexOf","doneDescription","deleteTask","deleteDescription","sortedDescriptions"],"mappings":"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","sourcesContent":["import { decorate, computed, observable, action } from 'mobx';\r\n\r\nclass Store {\r\n  tasks = [\r\n    { id: 0, title: 'Create todo-react app', done: false },\r\n    { id: 1, title: 'Make a video about it', done: true },\r\n    { id: 2, title: 'Create simple todo-app', done: false }\r\n  ];\r\n\r\n  get sortedTasks() {\r\n    const tasks = this.tasks;\r\n    return tasks\r\n      .slice()\r\n      .sort((a, b) => (a.done === b.done ? 0 : a.done ? 1 : -1));\r\n  }\r\n\r\n\r\n  get activeTasksCount() {\r\n    return this.tasks.filter(item => !item.done).length;\r\n  }\r\n\r\n  get activeDescriptionsCount() {\r\n    return this.descriptions.filter(item => !item.done).length;\r\n  }\r\n\r\n  setTasks(payload) {\r\n    this.tasks = payload;\r\n  }\r\n\r\n  setDescriptions(payload) {\r\n    this.descriptions = payload;\r\n  }\r\n\r\n  addTask(task) {\r\n    let tasks = this.tasks;\r\n    \r\n    tasks.push({\r\n      id: this.tasks.length || 0,\r\n      title: task,\r\n      done: false\r\n    });\r\n\r\n    this.setTasks(tasks);\r\n  };\r\n\r\n  addDesctiption(description){\r\n    let descriptions = this.descriptions;\r\n\r\n    descriptions.push({\r\n      id: this.descriptions.length || 0,\r\n      title: description,\r\n      done: false\r\n    });\r\n\r\n    this.setDescriptions(descriptions);\r\n  };\r\n\r\n  doneTask(id) {\r\n    let tasks = this.tasks;\r\n    const index = tasks.map(task => task.id).indexOf(id);\r\n    tasks[index].done = true;\r\n    this.setTasks(tasks);\r\n  };\r\n\r\n  doneDescription(id) {\r\n    let descriptions = this.descriptions;\r\n    const index = descriptions.map(description => description.id).indexOf(id);\r\n    descriptions[index].done = true;\r\n    this.setDescriptions(descriptions);\r\n  };\r\n\r\n  deleteTask(id) {\r\n    this.setTasks(this.tasks.filter(item => item.id !== id));\r\n  }\r\n\r\n  deleteDescription(id) {\r\n    this.setDescriptions(this.descriptions.filter(item => item.id !== id));\r\n  }\r\n}\r\n\r\nStore = decorate(Store, {\r\n  tasks: observable,\r\n  setTasks: action,\r\n  addTask: action,\r\n  deleteTask: action,\r\n  sortedTasks: computed,\r\n  activeTasksCount: computed,\r\n\r\n  descriptions: observable,\r\n  setDescriptions: action,\r\n  addDesctiption: action,\r\n  deleteDescription: action,\r\n  sortedDescriptions: computed,\r\n  activeDescriptionsCount: computed\r\n});\r\n\r\nexport default new Store();\r\n"]},"metadata":{},"sourceType":"module"}